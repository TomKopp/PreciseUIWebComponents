{"version":3,"file":"index.esm.js","sources":["../src/utility.ts","../src/decorators.ts","../src/components/Base/base-element.ts","../src/components/TextField/text-field.ts","../src/components/Card/card.ts","../src/components/Container/container.ts","../src/components/ContentSwitch/content-switch.ts"],"sourcesContent":["/**\n * @module utility\n */\n// eslint-disable-next-line\nexport function noop() { }\n\n/**\n * Returns the value\n *\n * @exports\n * @param {*} val any value\n * @returns {*} the exat same value\n */\nexport function identity(val: any) { return val; }\n\n/**\n * Converts an attribute string value to boolean\n *\n * @exports\n * @param {string} val attribute value\n * @returns {boolean} boolean interpretation of attribute\n */\nexport function attr2bool(val: string) { return val !== null; }\n\n/**\n * Converts a boolean value to a boolean attribute value\n *\n * @exports\n * @param {boolean} val a boolean\n * @returns {(string | null)} empty strign if attribute should exist, else null\n */\nexport function bool2attr(val: boolean) { return val ? '' : null; }\n\n/**\n * Wrapper around Object.is\n *\n * @exports\n * @param {*} oldValue old value\n * @param {*} newValue new value\n * @returns {boolean} true if old and new are NOT the same value\n */\nexport function isDifferent(oldValue: any, newValue: any) { return !Object.is(oldValue, newValue); }\n\nexport const debounce = (func: Function, wait: number, immediate = false) => {\n  if (typeof func !== 'function') {\n    throw new TypeError('Expected a function');\n  }\n\n  let timeout: number | null;\n  //@ts-ignore\n  return function debounced(...args) {\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        //@ts-ignore\n        func.apply(this, args);\n      }\n    };\n\n    const callNow = immediate && !timeout;\n    //@ts-ignore\n    clearTimeout(timeout);\n    //@ts-ignore\n    timeout = setTimeout(later, wait);\n\n    if (callNow) {\n      //@ts-ignore\n      func.apply(this, args);\n    }\n  };\n};\n\n\n\n/**\n * PropertyDeclaration\n *\n * @typedef PropertyDeclaration\n * @type {object}\n * @property {boolean} [observe] Flag indicating that this property will be monitored for changes\n * @property {boolean} [reflect] Flag indicatin that this property will be reflected as attribute\n * @property {Function} [prop2attr] Converts the property to an attribute\n * @property {Function} [attr2prop] Converts the attribute to a property\n * @property {Function} [modified] Tells if the value was modified\n */\nexport interface PropertyDeclaration {\n  observe?: boolean\n  , reflect?: boolean\n  , prop2attr?: Function\n  , attr2prop?: Function\n  , modified?: Function\n}\n\n/**\n * @exports\n * @type {PropertyDeclaration}\n * @property {boolean} [observe=true]\n * @property {boolean} [reflect=false]\n * @property {Function} [prop2attr=identity]\n * @property {Function} [attr2prop=identity]\n * @property {Function} [modified=isDifferent]\n */\nexport const defaultPropertyDeclaration = {\n  observe: true\n  , reflect: false\n  , prop2attr: identity\n  , attr2prop: identity\n  , modified: isDifferent\n};\n","import { PropertyDeclaration } from './utility';\nimport { BaseElement } from './components/Base/base-element';\n\n/**\n * @module decorators\n */\n/**\n * Class decorator to define a custom element\n *\n * @exports\n * @param {*} name tag name of the custom element\n * @param {*} options options parameter that is passed to the define function\n * @returns {Function} the actual decorator\n */\nexport function defineElement(name: string, options?: ElementDefinitionOptions) {\n\treturn function (classDescriptor: any) {\n\t\tclassDescriptor.finisher = function finisher(classConstructor: Function) {\n\t\t\tcustomElements.define(name, classConstructor, options);\n\t\t};\n\t\treturn classDescriptor;\n\t};\n}\n\n/**\n * Property decorator that augments the property with accessors and asignes some lifecycle options\n *\n * @exports\n * @param {module:utility.PropertyDeclaration} propertyDeclaration lifecycle options\n * @returns {Function} the actual decorator\n */\nexport function property(propertyDeclaration?: PropertyDeclaration) {\n  // TC39 descriptor. see https://github.com/tc39/proposal-decorators/blob/master/NEXTBUILTINS.md\n  // Second parameter (name) just to please TypeScript...\n\treturn function (propertyDescriptor: any, name?: PropertyKey) {\n\n\t\t// If the decorator is invoked on an field property it generates accessors with that name\n\t\t// and a somewhat hidden storage property.\n\t\t// The accessors are necessary to react on property changes with an render update.\n\t\tif (propertyDescriptor.kind === 'field') {\n\t\t\tconst propertyKey = `__${propertyDescriptor.key}`;\n\t\t\tpropertyDescriptor.extras = [\n\t\t\t\t{\n\t\t\t\t\tkey: propertyKey\n\t\t\t\t\t, kind: propertyDescriptor.kind\n\t\t\t\t\t, placement: propertyDescriptor.placement\n\t\t\t\t\t, initializer: propertyDescriptor.initializer\n\t\t\t\t\t, descriptor: {\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t\t, enumerable: true\n\t\t\t\t\t\t, writable: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t];\n\n\t\t\tpropertyDescriptor.kind = 'method';\n\t\t\tpropertyDescriptor.placement = 'prototype';\n\t\t\tdelete propertyDescriptor.initializer;\n\t\t\tpropertyDescriptor.descriptor = {\n\t\t\t\tget() { return this[propertyKey]; }\n\t\t\t\t, set(val: any) {\n\t\t\t\t\tconst oldVal = this[propertyKey];\n\t\t\t\t\tthis[propertyKey] = val;\n\t\t\t\t\tthis.requestUpdate(propertyDescriptor.key, oldVal, val);\n\t\t\t\t}\n\t\t\t\t, configurable: true\n\t\t\t\t, enumerable: true\n\t\t\t};\n\t\t}\n\t\tpropertyDescriptor.finisher = function finisher(classConstructor: typeof BaseElement) {\n\t\t\tclassConstructor.addClassProperty(propertyDescriptor.key, propertyDeclaration);\n\t\t};\n\t\treturn propertyDescriptor;\n\t};\n}\n","import { PropertyDeclaration, defaultPropertyDeclaration, identity, isDifferent } from '../../utility';\n\nexport * from './../../decorators';\nexport * from '../../utility';\n\n\n/**\n * @module BaseElement\n */\n\n\n//* Class *********************************************************************\n/**\n * Base class for web components\n *\n * @exports\n * @class BaseElement\n * @extends {HTMLElement}\n */\nexport class BaseElement extends HTMLElement {\n  //* Constructor ***********************************************************\n  constructor() {\n    // If you define a constructor, always call super() first to apply the right property chain!\n    // This is specific to custom elements and required by the spec.\n    super();\n\n    this.attachShadow({ mode: 'open' });\n    if (!this.shadowRoot) {\n      this._renderRoot = this;\n      throw new Error('No ShadowRoot');\n    }\n    this._renderRoot = this.shadowRoot;\n  }\n\n\n\n  //* Properties/Getter/Setter **********************************************\n  // TS mockery...\n  // ['constructor']: typeof BaseElement;\n\n\t/**\n\t * Specify observed attributes names to be notified in attributeChangedCallback\n\t *\n\t * @readonly\n\t * @protected\n\t * @static\n\t * @returns {string[]} array of property names that will be observed as attributes\n\t * @memberof BaseElement\n\t */\n  static get observedAttributes(): string[] {\n    const ret: string[] = [];\n    this.classProperties.forEach((propertyDeclaration, propertyKey) => {\n      if (propertyDeclaration.observe && typeof propertyKey === 'string') { ret.push(propertyKey); }\n    });\n    return ret;\n  }\n\n  // static get templateProperties() {\n  // \tconst ret = [];\n  // \tthis._classProperties.forEach((propertyDeclaration, propertyKey) => {\n  // \t\tif ((propertyDeclaration.observe || propertyDeclaration.templateProp)\n  // \t\t\t&& typeof propertyKey === 'string'\n  // \t\t) { ret.push(propertyKey); }\n  // \t});\n  // \treturn ret;\n  // }\n\n  // static get styleProperties() {\n  // \tconst ret = [];\n  // \tthis._classProperties.forEach((propertyDeclaration, propertyKey) => {\n  // \t\tif ((propertyDeclaration.observe || propertyDeclaration.styleProp)\n  // \t\t\t&& typeof propertyKey === 'string'\n  // \t\t) { ret.push(propertyKey); }\n  // \t});\n  // \treturn ret;\n  // }\n\n\t/**\n\t * Protected map of properties of the class with special flags.\n\t *\n\t * @readonly\n\t * @static\n\t * @returns {Map.<(string|number|symbol), module:utility.PropertyDeclaration>} property key - property decaration map\n\t * @memberof BaseElement\n\t */\n  static get classProperties(): Map<PropertyKey, PropertyDeclaration> {\n    if (!Object.prototype.hasOwnProperty.call(this, '_classProperties')) {\n      Object.defineProperty(this, '_classProperties', { enumerable: true, value: new Map() });\n    }\n    //@ts-ignore\n    return this._classProperties;\n  }\n\n  static addClassProperty(propertyKey: string, propertyDeclaration?: PropertyDeclaration) {\n    this.classProperties.set(propertyKey, Object.assign({}, defaultPropertyDeclaration, propertyDeclaration));\n  }\n\n\t/**\n\t * Protected property that holds a reference where to render the DOM to.\n\t *\n\t * @protected\n\t * @type {(HTMLElement | ShadowRoot)}\n\t * @memberof BaseElement\n\t */\n  _renderRoot: (HTMLElement | ShadowRoot);\n\n\t/**\n\t * Flag to indicate a scheduled requestAnimationFrame\n\t *\n\t * @protected\n\t * @type {boolean}\n\t * @memberof BaseElement\n\t */\n  _rAFScheduled: boolean = false;\n\n\t/**\n\t * Template element\n\t *\n\t * @protected\n\t * @type {HTMLTemplateElement | undefined}\n\t * @memberof BaseElement\n\t */\n  _template: HTMLTemplateElement | undefined;\n\n\t/**\n\t * Get the internal template\n\t *\n\t * @readonly\n\t * @returns {HTMLTemplateElement} template\n\t * @memberof BaseElement\n\t */\n  get template(): HTMLTemplateElement {\n    if (!this._template) { this._template = document.createElement('template'); }\n    return this._template;\n  }\n\n\t/**\n\t * Style element\n\t *\n\t * @protected\n\t * @type {HTMLStyleElement | undefined}\n\t * @memberof BaseElement\n\t */\n  _styleElement: HTMLStyleElement | undefined;\n\n\t/**\n\t * get the internal style\n\t *\n\t * @readonly\n\t * @returns {HTMLStyleElement} style\n\t * @memberof BaseElement\n\t */\n  get styleElement(): HTMLStyleElement {\n    if (!this._styleElement) { this._styleElement = document.createElement('style'); }\n    return this._styleElement;\n  }\n\n\n\n  //* Template ****************************************************************\n\t/**\n\t * Override to set a template\n\t *\n\t * @abstract\n\t * @example return '<div><slot name=test></slot></div>';\n\t * @returns {string} the template string\n\t * @memberof BaseElement\n\t */\n  updateTemplate(): string { throw new Error('must be implemented by subclass!'); }\n\n\t/**\n\t * Override to set the style element\n\t *\n\t * @abstract\n\t * @example return 'div {background-color: blue;}'\n\t * @returns {string} css ruleset\n\t * @memberof BaseElement\n\t */\n  updateStyle(): string { throw new Error('must be implemented by subclass!'); }\n\n\t/**\n\t * Sets or removes attributes of the component, based on the 'reflect' flag of the property.\n\t *\n\t * @protected\n\t * @memberof BaseElement\n\t */\n  reflectAttributes() {\n    const reflector = (propertyDeclaration: PropertyDeclaration, propertyKey: PropertyKey) => {\n      if (!propertyDeclaration.reflect && typeof propertyKey !== 'string') { return; }\n\n      const { prop2attr = identity } = propertyDeclaration;\n      const prop = prop2attr.call(this, this[propertyKey as keyof BaseElement]);\n\n      if (prop === null) { this.removeAttribute(propertyKey as string); }\n      else { this.setAttribute(propertyKey as string, prop); }\n    };\n\n    (this.constructor as typeof BaseElement).classProperties.forEach(reflector);\n  }\n\n\n\n  //* Obervers/Handlers *****************************************************\n\t/**\n\t * Called when an observed attribute has been added, removed, updated, or replaced.\n\t * Also called for initial values when an element is created by the parser, or upgraded.\n\t * Note: only attributes listed in the observedAttributes property will receive this callback.\n\t *\n\t * @param {string} attrName attribute name\n\t * @param {(string | null)} oldValue old value of the attribute\n\t * @param {(string | null)} newValue new value of the attribute\n\t * @memberof BaseElement\n\t */\n  attributeChangedCallback(attrName: string, oldValue: (string | null), newValue: (string | null)) {\n    if (oldValue === newValue) { return; }\n    const { attr2prop = identity } = (this.constructor as typeof BaseElement).classProperties.get(attrName) || defaultPropertyDeclaration;\n    //@ts-ignore\n    this[attrName] = attr2prop.call(this, newValue);\n  }\n\n\n\n  //* Life Cycle Callbacks **************************************************\n\t/**\n\t * Invoked each time the custom element is appended into a document-connected\n\t * element. This will happen each time the node is moved, and may happen before\n\t * the element's contents have been fully parsed.\n\t *\n\t * Useful for running setup code, such as fetching resources or rendering.\n\t * Generally, you should try to delay work until this time.\n\t *\n\t * @memberof BaseElement\n\t */\n  connectedCallback() {\n    if (!this.isConnected) { return; }\n    this.requestRender(true, true, true);\n  }\n\n\t/**\n\t * Invoked each time the custom element is disconnected from the document's DOM.\n\t * Useful for running clean up code.\n\t *\n\t * @memberof BaseElement\n\t */\n  // disconnectedCallback() {}\n\n\t/**\n\t * Invoked each time the custom element is moved to a new document.\n\t *\n\t * @memberof BaseElement\n\t */\n  // adoptedCallback() {}\n\n\t/**\n\t * Invoked if custom elem is \"form-associative = true\".\n\t *\n\t * @memberof BaseElement\n\t */\n  // formResetCallback() {}\n\n\t/**\n\t * Requests an update of the component. Checks if the value changed.\n\t *\n\t * @param {string} propertyKey property name\n\t * @param {*} oldValue old value of the property\n\t * @param {*} newValue new value of the property\n\t * @memberof BaseElement\n\t */\n  requestUpdate(propertyKey: string, oldValue: any, newValue: any) {\n    const {\n      modified = isDifferent\n      // , templateProp = false\n      // , styleProp = false\n      , reflect = false\n    } = (this.constructor as typeof BaseElement).classProperties.get(propertyKey) || defaultPropertyDeclaration;\n\n    if (modified.call(this, oldValue, newValue)) {\n      this.styleElement.innerHTML = this.updateStyle();\n      this.template.innerHTML = this.updateTemplate();\n\n      // ! set template and style render flags correctly\n      this.requestRender(true, true, reflect);\n    }\n  }\n\n  requestRender(dirtyTemplate: boolean, dirtyStyle: boolean, dirtyAttribute: boolean) {\n    this.preRenderHook();\n\n    if (!this._rAFScheduled) {\n      this._rAFScheduled = true;\n      requestAnimationFrame(() => {\n        this.render(dirtyTemplate, dirtyStyle, dirtyAttribute);\n        this._rAFScheduled = false;\n      });\n    }\n  }\n\n\t/**\n\t * Invoked each time the custom element will becommitted to the DOM.\n\t *\n\t * @override\n\t * @memberof BaseElement\n\t */\n  // eslint-disable-next-line\n  preRenderHook() { }\n\n\t/**\n\t * Invoked each time the custom element is committed to the DOM\n\t *\n\t * @protected\n\t * @param {boolean} dirtyTemplate Flag indicating template rerender\n\t * @param {boolean} dirtyStyle Flag indicating style rerender\n\t * @param {boolean} dirtyAttribute Flag indicating attribute update\n\t * @memberof BaseElement\n\t */\n  render(dirtyTemplate: boolean, dirtyStyle: boolean, dirtyAttribute: boolean) {\n    if (dirtyStyle) { this._renderRoot.appendChild(this.styleElement); }\n\n    // Does not clone the DocumentFragment, instead rips it from the template and\n    // places it into the render node. This way the element will retain the references\n    // of objects within the template.\n    if (dirtyTemplate) { this._renderRoot.appendChild(this.template.content); }\n    if (dirtyAttribute) { this.reflectAttributes(); }\n  }\n}\n","import { customelementprefix } from '../../../package.json';\nimport { InputType, AutocompleteValue } from '../../types';\nimport { BaseElement, defineElement, debounce, attr2bool } from '../Base/base-element';\n\n\n//* Class **********************************************************************\n@defineElement(`${customelementprefix}-textfield`)\nexport class TextField extends BaseElement {\n//* Constructor ****************************************************************\n\n\n\n//* Properties - Getter/Setter *************************************************\n  private _formElement: HTMLInputElement | HTMLTextAreaElement | undefined;\n  get formElement(): HTMLInputElement | HTMLTextAreaElement {\n    if (!this._formElement) this._formElement = this.template.content.querySelector('#form-elem')! as HTMLInputElement | HTMLTextAreaElement;\n    return this._formElement;\n  }\n\n  private _labelElem: HTMLLabelElement | undefined;\n  get labelElement(): HTMLLabelElement {\n    if (!this._labelElem) this._labelElem = this.template.content.querySelector('label')!;\n    return this._labelElem;\n  }\n\n  // General Input attr\n  private _autocomplete: AutocompleteValue | boolean = false;\n  get autocomplete() { return this._autocomplete as AutocompleteValue; }\n  set autocomplete(val: AutocompleteValue) {\n    this._autocomplete = val;\n    Reflect.set(this.formElement, 'autocomplete', this._autocomplete);\n  }\n\n  private _autofocus: boolean = false;\n  get autofocus() { return this._autofocus; }\n  set autofocus(val: any) {\n    this._autofocus = attr2bool(val);\n    Reflect.set(this.formElement, 'autofocus', this._autofocus);\n  }\n\n  private _disabled: boolean = false;\n  get disabled() { return this._disabled; }\n  set disabled(val: any) {\n    this._disabled = attr2bool(val);\n    Reflect.set(this.formElement, 'disabled', this._disabled);\n  }\n\n  private _form: string | null = null;\n  // get form() { return this.formElem.getAttribute('form') || ''; }\n  // set form(val: string) { this.formElem.setAttribute('form', val); }\n\n  private _list: string | null = null;\n  // get list() { return this.formElem.getAttribute('list') || ''; }\n  // set list(val: string) { this.formElem.setAttribute('list', val)}\n\n  private _name: string = '';\n  get name() { return this._name; }\n  set name(val) { this.formElement.name = this._name = val; }\n\n  private _readOnly: boolean = false;\n  get readOnly() { return this._readOnly; }\n  set readOnly(val: any) { this.formElement.readOnly = this._readOnly = attr2bool(val); }\n\n  private _required: boolean = false;\n  get required() { return this._required; }\n  set required(val: any) { this.formElement.required = this._required = attr2bool(val); }\n\n  private _type: InputType = 'text';\n  get type() { return this._type as InputType; }\n  set type(val) { if (this.formElement instanceof HTMLInputElement) this.formElement.type = this._type = val; }\n\n  private _value: string = '';\n  get value() { return this._value; }\n  set value(val) {\n    this._value = val;\n    if (this.formElement.value !== this._value) this.formElement.value = this._value;\n  }\n\n  private _placeholder: string = '';\n  get placeholder() { return this._placeholder; }\n  set placeholder(val) { this.formElement.placeholder = this._placeholder = val; }\n\n  private _multiline: boolean | number = false;\n  get multiline() { return this._multiline; }\n  set multiline(val) { this._multiline = val; }\n\n  // PreciseUI\n  borderless: boolean = false;\n  className: string = '';\n  clearable: boolean = false;\n  defaultValue: string = '';\n  error: string = ''; // error message below input\n  icon: any; // Sets an optional default icon (if any) to use when no error or clearable is given. - we have slots\n  info: string = ''; // info instead of error\n  label: string = '';\n  maxLength: number = -1;\n  minLenght: number = -1;\n  prefix: string = '';\n  resizable: 'both' | 'horizontal' | 'vertical' | 'none' = 'none'; //! API change, was: boolean | 'auto' | 'vertical' | 'horizontal' = false\n  // style: string = ''; // not possible as string, has to be a CSSStyleDeclaration for this exact property name\n  // suffix: string = '';\n  // theme: string = ''; //TODO figure out how to use themes within wc\n  // Eventhandler\n  // onBlur: CallableFunction = noop;\n  // onChange: CallableFunction = noop;\n  // onClear: CallableFunction = noop;\n  // onFocus: CallableFunction = noop;\n  // onInput: CallableFunction = noop;\n\n\n\n//* Template *******************************************************************\n  protected renderStyle() {\n    return `\n.text-field-container {\n  position: relative;\n}\n.stack-pannel {\n  display: flex;\n  justify-content: flex-start;\n}\n#prefix,\n#suffix {\n  align-items: center;\n  background: rgb(239, 239, 239);\n  color: rgb(114, 114, 114);\n  display: flex;\n  font-size: 1rem;\n  padding: 1rem;\n}\nlabel {\n  display: flex;\n  flex-flow: column-reverse;\n  flex-grow: 1;\n  height: 100%;\n  margin: auto;\n  min-width: 0px;\n  position: relative;\n\n  align-items: center;\n  background: rgb(248, 248, 248);\n  border-bottom: 1px solid rgb(239, 239, 239);\n  box-shadow: none;\n  box-sizing: border-box;\n  cursor: auto;\n  display: flex;\n  flex: 1 1 0%;\n  margin: 0px;\n  max-height: 112px;\n  min-height: 54px;\n  overflow-y: auto;\n}\ninput {\n  -webkit-appearance: none;\n  background: none;\n  border-color: initial;\n  border-image: initial;\n  border-radius: 0px;\n  border-style: none;\n  border-width: initial;\n  box-shadow: none;\n  box-sizing: border-box;\n  color: rgb(62, 62, 62);\n  cursor: auto;\n  font-family: inherit;\n  font-size: 1rem;\n  height: 100%;\n  margin: 0px;\n  padding: 1.5rem 1rem 0.5rem;\n  transition: all 0.2s ease 0s;\n  width: 100%;\n}\ntextarea {\n  background: rgb(248, 248, 248);\n  border-bottom: 1px solid rgb(211, 211, 211);\n  border-image: initial;\n  border-left-color: initial;\n  border-left-width: initial;\n  border-radius: 0px;\n  border-right-color: initial;\n  border-right-width: initial;\n  border-style: none none solid;\n  border-top-color: initial;\n  border-top-width: initial;\n  box-shadow: none;\n  box-sizing: border-box;\n  color: rgb(114, 114, 114);\n  cursor: auto;\n  font-family: inherit;\n  font-size: 1rem;\n  margin: 0px;\n  padding: 1.5rem 1rem 0.5rem;\n  resize: ${this.resizable};\n  width: 100%;\n}\n#form-elem:disabled {\n  -webkit-appearance: none;\n  background: none;\n  border-color: initial;\n  border-image: initial;\n  border-radius: 0px;\n  border-style: none;\n  border-width: initial;\n  box-shadow: none;\n  box-sizing: border-box;\n  color: rgb(180, 180, 180);\n  cursor: not-allowed;\n  font-family: inherit;\n  font-size: 1rem;\n  height: 100%;\n  margin: 0px;\n  padding: 1rem;\n  transition: all 0.2s ease 0s;\n  width: 100%;\n}\n#description {\n  background: transparent;\n  box-sizing: border-box;\n  /* color: rgb(114, 114, 114); */\n  cursor: text;\n  display: block;\n  font-size: 0.75rem;\n  left: 1rem;\n  line-height: 1rem;\n  max-width: 66.66%;\n  overflow: hidden;\n  padding-top: 0.5rem;\n  position: absolute;\n  right: 0px;\n  text-overflow: ellipsis;\n  top: 0px;\n  transform-origin: left bottom;\n  /* transform: translate(0px, 0.85rem) scale(1.33); */\n  transition: all 0.2s ease 0s;\n  white-space: nowrap;\n}\n#form-elem:focus + #description {\n  color: rgb(0, 139, 208);\n  /* transform: none; */\n}`};\n\n  private renderIcon = () => this.icon ? this.icon : `Icon/ErrorIco`;\n  //@ts-ignore-next-line\n  private attr2string = () => (this.constructor as typeof TextField).observedAttributes.map((val) => val in this ? `${val}=\"${this[val]}\"` : '').join(' ');\n  private renderInput = () => `<input id=form-elem ${this.attr2string()} />`;\n  private renderTextarea = () => `<textarea id=form-elem ${this.attr2string()} ${typeof this._multiline === 'number' ? `row=${this._multiline}` : ''}></textarea>`;\n\n  renderTemplate() {\n    return `\n<div class=text-field-container>\n  <div class=stack-pannel>\n    <span id=prefix><slot name=prefix>Prefix</slot></span>\n    <label>\n      ${this._multiline ? this.renderTextarea() : this.renderInput()}\n      <span id=description><slot>Description/Label/Error/Info</slot></span>\n      <i class=defaultIcon><slot name=icon>${this.renderIcon()}</slot></i>\n    </label>\n    <span id=suffix><slot name=suffix>Suffix</slot></span>\n  </div>\n</div>`;\n  }\n\n\n\n//* Obervers/Handlers **********************************************************\n  static get observedAttributes() { return ['autocomplete', 'autofocus', 'disabled', 'form', 'list', 'multiline', 'name', 'placeholder', 'readOnly', 'required', 'type', 'value']; }\n\n  //@ts-ignore-next-line\n  attributeChangedCallback(attrName: string, oldValue: any, newValue: string) { if (attrName in this) this[attrName] = newValue }\n\n  //@ts-ignore-next-line\n  forwardProperty(targetElement: HTMLElement, key: string | number, val: any) { if (targetElement && key in targetElement) targetElement[key] = val; }\n\n\n\n//* Life Cycle Callbacks *******************************************************\n  preCommitHook() {\n    this.formElement.addEventListener('change', debounce(() => this.value = this.formElement.value, 50));\n  }\n}\n","import { customelementprefix } from '../../../package.json';\nimport { BaseElement, defineElement, property, attr2bool, bool2attr } from '../Base/base-element';\n\n@defineElement(`${customelementprefix}-card`)\nexport class Card extends BaseElement {\n  //! API change, was: orientation: 'horizontal' | 'vertical' = 'vertical';\n  @property({ reflect: true })\n  direction: 'row' | 'column' = 'column';\n\n  @property({ reflect: true })\n  layout: string = '';\n\n  get layoutCSS () {\n    return (this.layout.match(/\\d/gu) || [])\n      .map((val, key) => `.card > :nth-child(${key + 1}) {flex:${val} 1 auto;}`)\n      .join('\\n');\n  }\n\n  @property({\n    reflect: true\n    , attr2prop: attr2bool\n    , prop2attr: bool2attr\n  })\n  disabled: boolean = false;\n\n\n\n  updateTemplate() {\n    return `<section class=\"card\">\n  <div class=\"card-header\"><slot name=header></slot></div>\n  <div class=\"card-media\"><slot name=media></slot></div>\n  <div class=\"card-body\"><slot name=body></slot></div>\n  <div class=\"card-footer\"><slot name=footer></slot></div>\n</section>`;\n  }\n\n  updateStyle() {\n    return `\n.card {\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: ${this.direction};\n  justify-content: flex-start;\n  padding: 1rem;\n}\n${this.layoutCSS}`;\n  }\n}\n","import { customelementprefix } from '../../../package.json';\nimport { BaseElement, defineElement, property } from '../Base/base-element';\n\n@defineElement(`${customelementprefix}-container`)\nexport class Container extends BaseElement {\n  @property({ reflect: true })\n  align: 'center' | 'left' | 'right' = 'center';\n\n  @property({ reflect: true })\n  maxWidth: number | null = null;\n\n  updateTemplate() {\n    return `<div class=container>\n  <slot></slot>\n</div>`;\n  }\n\n  updateStyle() {\n    return `.container {\n  display: flex;\n  justify-content: ${this.align === 'center' ? 'center' : `flex-${this.align === 'left' ? 'left' : 'right'}`};\n  ${this.maxWidth === null ? `max-width: ${this.maxWidth}` : ''}\n}`;\n  }\n}\n","import { customelementprefix } from '../../../package.json';\nimport { BaseElement, defineElement, property } from \"../Base/base-element\";\n\n@defineElement(`${customelementprefix}-content-switch`)\nexport class ContentSwitch extends BaseElement {\n  @property({\n    reflect: true\n    , attr2prop(val: string) { return Number(val); }\n    , prop2attr(val: number) { return String(val); }\n  })\n  defaultIndex: number = 1;\n\n  @property({\n    reflect: true\n    , attr2prop(val: string) { return Number(val); }\n    , prop2attr(val: number) { return String(val); }\n  })\n  selectedIndex: number = 1;\n\n  @property({ reflect: true })\n  orientation: 'vertical' | 'horizontal' = 'horizontal';\n\n  updateTemplate() {\n    return `<div class=content-switch>\n  <slot></slot>\n</div>`;\n  }\n\n  updateStyle() {\n    return ``;\n  }\n}\n"],"names":["identity","val","attr2bool","bool2attr","isDifferent","oldValue","newValue","Object","is","debounce","func","wait","immediate","TypeError","timeout","debounced","args","later","apply","callNow","clearTimeout","setTimeout","defaultPropertyDeclaration","observe","reflect","prop2attr","attr2prop","modified","defineElement","name","options","classDescriptor","finisher","classConstructor","customElements","define","property","propertyDeclaration","propertyDescriptor","kind","propertyKey","key","extras","placement","initializer","descriptor","configurable","enumerable","writable","get","set","oldVal","requestUpdate","addClassProperty","BaseElement","HTMLElement","constructor","attachShadow","mode","shadowRoot","_renderRoot","Error","observedAttributes","ret","classProperties","forEach","push","prototype","hasOwnProperty","call","defineProperty","value","Map","_classProperties","assign","template","_template","document","createElement","styleElement","_styleElement","updateTemplate","updateStyle","reflectAttributes","reflector","prop","removeAttribute","setAttribute","attributeChangedCallback","attrName","connectedCallback","isConnected","requestRender","innerHTML","dirtyTemplate","dirtyStyle","dirtyAttribute","preRenderHook","_rAFScheduled","requestAnimationFrame","render","appendChild","content","TextField","customelementprefix","_formElement","querySelector","_labelElem","_autocomplete","Reflect","formElement","_autofocus","_disabled","_name","_readOnly","readOnly","_required","required","_type","HTMLInputElement","type","_value","_placeholder","placeholder","_multiline","resizable","icon","map","join","attr2string","renderTextarea","renderInput","renderIcon","targetElement","addEventListener","Card","layout","match","direction","layoutCSS","Container","align","maxWidth","ContentSwitch","Number","String"],"mappings":"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"}