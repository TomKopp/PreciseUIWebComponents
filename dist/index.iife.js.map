{"version":3,"file":"index.iife.js","sources":["../src/utility.ts","../src/decorators.ts","../src/components/Base/base-element.ts","../src/components/TextField/text-field.ts","../src/components/Card/card.ts","../src/components/Container/container.ts","../src/components/ContentSwitch/content-switch.ts"],"sourcesContent":["/**\n * @module utility\n */\n// eslint-disable-next-line\nexport function noop() { }\n\n/**\n * Returns the value\n *\n * @exports\n * @param {*} val any value\n * @returns {*} the exat same value\n */\nexport function identity(val: any) { return val; }\n\n/**\n * Converts an attribute string value to boolean\n *\n * @exports\n * @param {string} val attribute value\n * @returns {boolean} boolean interpretation of attribute\n */\nexport function attr2bool(val: string) { return val !== null; }\n\n/**\n * Converts a boolean value to a boolean attribute value\n *\n * @exports\n * @param {boolean} val a boolean\n * @returns {(string | null)} empty strign if attribute should exist, else null\n */\nexport function bool2attr(val: boolean) { return val ? '' : null; }\n\n/**\n * Wrapper around Object.is\n *\n * @exports\n * @param {*} oldValue old value\n * @param {*} newValue new value\n * @returns {boolean} true if old and new are NOT the same value\n */\nexport function isDifferent(oldValue: any, newValue: any) { return !Object.is(oldValue, newValue); }\n\nexport const debounce = (func: Function, wait: number, immediate = false) => {\n  if (typeof func !== 'function') {\n    throw new TypeError('Expected a function');\n  }\n\n  let timeout: number | null;\n  //@ts-ignore\n  return function debounced(...args) {\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        //@ts-ignore\n        func.apply(this, args);\n      }\n    };\n\n    const callNow = immediate && !timeout;\n    //@ts-ignore\n    clearTimeout(timeout);\n    //@ts-ignore\n    timeout = setTimeout(later, wait);\n\n    if (callNow) {\n      //@ts-ignore\n      func.apply(this, args);\n    }\n  };\n};\n\n\n\n/**\n * PropertyDeclaration\n *\n * @typedef PropertyDeclaration\n * @type {object}\n * @property {boolean} [observe] Flag indicating that this property will be monitored for changes\n * @property {boolean} [reflect] Flag indicatin that this property will be reflected as attribute\n * @property {Function} [prop2attr] Converts the property to an attribute\n * @property {Function} [attr2prop] Converts the attribute to a property\n * @property {Function} [modified] Tells if the value was modified\n */\nexport interface PropertyDeclaration {\n  observe?: boolean\n  , reflect?: boolean\n  , prop2attr?: Function\n  , attr2prop?: Function\n  , modified?: Function\n}\n\n/**\n * @exports\n * @type {PropertyDeclaration}\n * @property {boolean} [observe=true]\n * @property {boolean} [reflect=false]\n * @property {Function} [prop2attr=identity]\n * @property {Function} [attr2prop=identity]\n * @property {Function} [modified=isDifferent]\n */\nexport const defaultPropertyDeclaration = {\n  observe: true\n  , reflect: false\n  , prop2attr: identity\n  , attr2prop: identity\n  , modified: isDifferent\n};\n","import { PropertyDeclaration } from './utility';\nimport { BaseElement } from './components/Base/base-element';\n\n/**\n * @module decorators\n */\n/**\n * Class decorator to define a custom element\n *\n * @exports\n * @param {*} name tag name of the custom element\n * @param {*} options options parameter that is passed to the define function\n * @returns {Function} the actual decorator\n */\nexport function defineElement(name: string, options?: ElementDefinitionOptions) {\n\treturn function (classDescriptor: any) {\n\t\tclassDescriptor.finisher = function finisher(classConstructor: Function) {\n\t\t\tcustomElements.define(name, classConstructor, options);\n\t\t};\n\t\treturn classDescriptor;\n\t};\n}\n\n/**\n * Property decorator that augments the property with accessors and asignes some lifecycle options\n *\n * @exports\n * @param {module:utility.PropertyDeclaration} propertyDeclaration lifecycle options\n * @returns {Function} the actual decorator\n */\nexport function property(propertyDeclaration?: PropertyDeclaration) {\n  // TC39 descriptor. see https://github.com/tc39/proposal-decorators/blob/master/NEXTBUILTINS.md\n  // Second parameter (name) just to please TypeScript...\n\treturn function (propertyDescriptor: any, name?: PropertyKey) {\n\n\t\t// If the decorator is invoked on an field property it generates accessors with that name\n\t\t// and a somewhat hidden storage property.\n\t\t// The accessors are necessary to react on property changes with an render update.\n\t\tif (propertyDescriptor.kind === 'field') {\n\t\t\tconst propertyKey = `__${propertyDescriptor.key}`;\n\t\t\tpropertyDescriptor.extras = [\n\t\t\t\t{\n\t\t\t\t\tkey: propertyKey\n\t\t\t\t\t, kind: propertyDescriptor.kind\n\t\t\t\t\t, placement: propertyDescriptor.placement\n\t\t\t\t\t, initializer: propertyDescriptor.initializer\n\t\t\t\t\t, descriptor: {\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t\t, enumerable: true\n\t\t\t\t\t\t, writable: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t];\n\n\t\t\tpropertyDescriptor.kind = 'method';\n\t\t\tpropertyDescriptor.placement = 'prototype';\n\t\t\tdelete propertyDescriptor.initializer;\n\t\t\tpropertyDescriptor.descriptor = {\n\t\t\t\tget() { return this[propertyKey]; }\n\t\t\t\t, set(val: any) {\n\t\t\t\t\tconst oldVal = this[propertyKey];\n\t\t\t\t\tthis[propertyKey] = val;\n\t\t\t\t\tthis.requestUpdate(propertyDescriptor.key, oldVal, val);\n\t\t\t\t}\n\t\t\t\t, configurable: true\n\t\t\t\t, enumerable: true\n\t\t\t};\n\t\t}\n\t\tpropertyDescriptor.finisher = function finisher(classConstructor: typeof BaseElement) {\n\t\t\tclassConstructor.addClassProperty(propertyDescriptor.key, propertyDeclaration);\n\t\t};\n\t\treturn propertyDescriptor;\n\t};\n}\n","import { PropertyDeclaration, defaultPropertyDeclaration, identity, isDifferent } from '../../utility';\n\nexport * from './../../decorators';\nexport * from '../../utility';\n\n\n/**\n * @module BaseElement\n */\n\n\n//* Class *********************************************************************\n/**\n * Base class for web components\n *\n * @exports\n * @class BaseElement\n * @extends {HTMLElement}\n */\nexport class BaseElement extends HTMLElement {\n  //* Constructor ***********************************************************\n  constructor() {\n    // If you define a constructor, always call super() first to apply the right property chain!\n    // This is specific to custom elements and required by the spec.\n    super();\n\n    this.attachShadow({ mode: 'open' });\n    if (!this.shadowRoot) {\n      this._renderRoot = this;\n      throw new Error('No ShadowRoot');\n    }\n    this._renderRoot = this.shadowRoot;\n  }\n\n\n\n  //* Properties/Getter/Setter **********************************************\n  // TS mockery...\n  // ['constructor']: typeof BaseElement;\n\n\t/**\n\t * Specify observed attributes names to be notified in attributeChangedCallback\n\t *\n\t * @readonly\n\t * @protected\n\t * @static\n\t * @returns {string[]} array of property names that will be observed as attributes\n\t * @memberof BaseElement\n\t */\n  static get observedAttributes(): string[] {\n    const ret: string[] = [];\n    this.classProperties.forEach((propertyDeclaration, propertyKey) => {\n      if (propertyDeclaration.observe && typeof propertyKey === 'string') { ret.push(propertyKey); }\n    });\n    return ret;\n  }\n\n  // static get templateProperties() {\n  // \tconst ret = [];\n  // \tthis._classProperties.forEach((propertyDeclaration, propertyKey) => {\n  // \t\tif ((propertyDeclaration.observe || propertyDeclaration.templateProp)\n  // \t\t\t&& typeof propertyKey === 'string'\n  // \t\t) { ret.push(propertyKey); }\n  // \t});\n  // \treturn ret;\n  // }\n\n  // static get styleProperties() {\n  // \tconst ret = [];\n  // \tthis._classProperties.forEach((propertyDeclaration, propertyKey) => {\n  // \t\tif ((propertyDeclaration.observe || propertyDeclaration.styleProp)\n  // \t\t\t&& typeof propertyKey === 'string'\n  // \t\t) { ret.push(propertyKey); }\n  // \t});\n  // \treturn ret;\n  // }\n\n\t/**\n\t * Protected map of properties of the class with special flags.\n\t *\n\t * @readonly\n\t * @static\n\t * @returns {Map.<(string|number|symbol), module:utility.PropertyDeclaration>} property key - property decaration map\n\t * @memberof BaseElement\n\t */\n  static get classProperties(): Map<PropertyKey, PropertyDeclaration> {\n    if (!Object.prototype.hasOwnProperty.call(this, '_classProperties')) {\n      Object.defineProperty(this, '_classProperties', { enumerable: true, value: new Map() });\n    }\n    //@ts-ignore\n    return this._classProperties;\n  }\n\n  static addClassProperty(propertyKey: string, propertyDeclaration?: PropertyDeclaration) {\n    this.classProperties.set(propertyKey, Object.assign({}, defaultPropertyDeclaration, propertyDeclaration));\n  }\n\n\t/**\n\t * Protected property that holds a reference where to render the DOM to.\n\t *\n\t * @protected\n\t * @type {(HTMLElement | ShadowRoot)}\n\t * @memberof BaseElement\n\t */\n  _renderRoot: (HTMLElement | ShadowRoot);\n\n\t/**\n\t * Flag to indicate a scheduled requestAnimationFrame\n\t *\n\t * @protected\n\t * @type {boolean}\n\t * @memberof BaseElement\n\t */\n  _rAFScheduled: boolean = false;\n\n\t/**\n\t * Template element\n\t *\n\t * @protected\n\t * @type {HTMLTemplateElement | undefined}\n\t * @memberof BaseElement\n\t */\n  _template: HTMLTemplateElement | undefined;\n\n\t/**\n\t * Get the internal template\n\t *\n\t * @readonly\n\t * @returns {HTMLTemplateElement} template\n\t * @memberof BaseElement\n\t */\n  get template(): HTMLTemplateElement {\n    if (!this._template) { this._template = document.createElement('template'); }\n    return this._template;\n  }\n\n\t/**\n\t * Style element\n\t *\n\t * @protected\n\t * @type {HTMLStyleElement | undefined}\n\t * @memberof BaseElement\n\t */\n  _styleElement: HTMLStyleElement | undefined;\n\n\t/**\n\t * get the internal style\n\t *\n\t * @readonly\n\t * @returns {HTMLStyleElement} style\n\t * @memberof BaseElement\n\t */\n  get styleElement(): HTMLStyleElement {\n    if (!this._styleElement) { this._styleElement = document.createElement('style'); }\n    return this._styleElement;\n  }\n\n\n\n  //* Template ****************************************************************\n\t/**\n\t * Override to set a template\n\t *\n\t * @abstract\n\t * @example return '<div><slot name=test></slot></div>';\n\t * @returns {string} the template string\n\t * @memberof BaseElement\n\t */\n  updateTemplate(): string { throw new Error('must be implemented by subclass!'); }\n\n\t/**\n\t * Override to set the style element\n\t *\n\t * @abstract\n\t * @example return 'div {background-color: blue;}'\n\t * @returns {string} css ruleset\n\t * @memberof BaseElement\n\t */\n  updateStyle(): string { throw new Error('must be implemented by subclass!'); }\n\n\t/**\n\t * Sets or removes attributes of the component, based on the 'reflect' flag of the property.\n\t *\n\t * @protected\n\t * @memberof BaseElement\n\t */\n  reflectAttributes() {\n    const reflector = (propertyDeclaration: PropertyDeclaration, propertyKey: PropertyKey) => {\n      if (!propertyDeclaration.reflect && typeof propertyKey !== 'string') { return; }\n\n      const { prop2attr = identity } = propertyDeclaration;\n      const prop = prop2attr.call(this, this[propertyKey as keyof BaseElement]);\n\n      if (prop === null) { this.removeAttribute(propertyKey as string); }\n      else { this.setAttribute(propertyKey as string, prop); }\n    };\n\n    (this.constructor as typeof BaseElement).classProperties.forEach(reflector);\n  }\n\n\n\n  //* Obervers/Handlers *****************************************************\n\t/**\n\t * Called when an observed attribute has been added, removed, updated, or replaced.\n\t * Also called for initial values when an element is created by the parser, or upgraded.\n\t * Note: only attributes listed in the observedAttributes property will receive this callback.\n\t *\n\t * @param {string} attrName attribute name\n\t * @param {(string | null)} oldValue old value of the attribute\n\t * @param {(string | null)} newValue new value of the attribute\n\t * @memberof BaseElement\n\t */\n  attributeChangedCallback(attrName: string, oldValue: (string | null), newValue: (string | null)) {\n    if (oldValue === newValue) { return; }\n    const { attr2prop = identity } = (this.constructor as typeof BaseElement).classProperties.get(attrName) || defaultPropertyDeclaration;\n    //@ts-ignore\n    this[attrName] = attr2prop.call(this, newValue);\n  }\n\n\n\n  //* Life Cycle Callbacks **************************************************\n\t/**\n\t * Invoked each time the custom element is appended into a document-connected\n\t * element. This will happen each time the node is moved, and may happen before\n\t * the element's contents have been fully parsed.\n\t *\n\t * Useful for running setup code, such as fetching resources or rendering.\n\t * Generally, you should try to delay work until this time.\n\t *\n\t * @memberof BaseElement\n\t */\n  connectedCallback() {\n    if (!this.isConnected) { return; }\n    this.requestRender(true, true, true);\n  }\n\n\t/**\n\t * Invoked each time the custom element is disconnected from the document's DOM.\n\t * Useful for running clean up code.\n\t *\n\t * @memberof BaseElement\n\t */\n  // disconnectedCallback() {}\n\n\t/**\n\t * Invoked each time the custom element is moved to a new document.\n\t *\n\t * @memberof BaseElement\n\t */\n  // adoptedCallback() {}\n\n\t/**\n\t * Invoked if custom elem is \"form-associative = true\".\n\t *\n\t * @memberof BaseElement\n\t */\n  // formResetCallback() {}\n\n\t/**\n\t * Requests an update of the component. Checks if the value changed.\n\t *\n\t * @param {string} propertyKey property name\n\t * @param {*} oldValue old value of the property\n\t * @param {*} newValue new value of the property\n\t * @memberof BaseElement\n\t */\n  requestUpdate(propertyKey: string, oldValue: any, newValue: any) {\n    const {\n      modified = isDifferent\n      // , templateProp = false\n      // , styleProp = false\n      , reflect = false\n    } = (this.constructor as typeof BaseElement).classProperties.get(propertyKey) || defaultPropertyDeclaration;\n\n    if (modified.call(this, oldValue, newValue)) {\n      this.styleElement.innerHTML = this.updateStyle();\n      this.template.innerHTML = this.updateTemplate();\n\n      // ! set template and style render flags correctly\n      this.requestRender(true, true, reflect);\n    }\n  }\n\n  requestRender(dirtyTemplate: boolean, dirtyStyle: boolean, dirtyAttribute: boolean) {\n    this.preRenderHook();\n\n    if (!this._rAFScheduled) {\n      this._rAFScheduled = true;\n      requestAnimationFrame(() => {\n        this.render(dirtyTemplate, dirtyStyle, dirtyAttribute);\n        this._rAFScheduled = false;\n      });\n    }\n  }\n\n\t/**\n\t * Invoked each time the custom element will becommitted to the DOM.\n\t *\n\t * @override\n\t * @memberof BaseElement\n\t */\n  // eslint-disable-next-line\n  preRenderHook() { }\n\n\t/**\n\t * Invoked each time the custom element is committed to the DOM\n\t *\n\t * @protected\n\t * @param {boolean} dirtyTemplate Flag indicating template rerender\n\t * @param {boolean} dirtyStyle Flag indicating style rerender\n\t * @param {boolean} dirtyAttribute Flag indicating attribute update\n\t * @memberof BaseElement\n\t */\n  render(dirtyTemplate: boolean, dirtyStyle: boolean, dirtyAttribute: boolean) {\n    if (dirtyStyle) { this._renderRoot.appendChild(this.styleElement); }\n\n    // Does not clone the DocumentFragment, instead rips it from the template and\n    // places it into the render node. This way the element will retain the references\n    // of objects within the template.\n    if (dirtyTemplate) { this._renderRoot.appendChild(this.template.content); }\n    if (dirtyAttribute) { this.reflectAttributes(); }\n  }\n}\n","import { customelementprefix } from '../../../package.json';\nimport { InputType, AutocompleteValue } from '../../types';\nimport { BaseElement, defineElement, debounce, attr2bool } from '../Base/base-element';\n\n\n//* Class **********************************************************************\n@defineElement(`${customelementprefix}-textfield`)\nexport class TextField extends BaseElement {\n//* Constructor ****************************************************************\n\n\n\n//* Properties - Getter/Setter *************************************************\n  private _formElement: HTMLInputElement | HTMLTextAreaElement | undefined;\n  get formElement(): HTMLInputElement | HTMLTextAreaElement {\n    if (!this._formElement) this._formElement = this.template.content.querySelector('#form-elem')! as HTMLInputElement | HTMLTextAreaElement;\n    return this._formElement;\n  }\n\n  private _labelElem: HTMLLabelElement | undefined;\n  get labelElement(): HTMLLabelElement {\n    if (!this._labelElem) this._labelElem = this.template.content.querySelector('label')!;\n    return this._labelElem;\n  }\n\n  // General Input attr\n  private _autocomplete: AutocompleteValue | boolean = false;\n  get autocomplete() { return this._autocomplete as AutocompleteValue; }\n  set autocomplete(val: AutocompleteValue) {\n    this._autocomplete = val;\n    Reflect.set(this.formElement, 'autocomplete', this._autocomplete);\n  }\n\n  private _autofocus: boolean = false;\n  get autofocus() { return this._autofocus; }\n  set autofocus(val: any) {\n    this._autofocus = attr2bool(val);\n    Reflect.set(this.formElement, 'autofocus', this._autofocus);\n  }\n\n  private _disabled: boolean = false;\n  get disabled() { return this._disabled; }\n  set disabled(val: any) {\n    this._disabled = attr2bool(val);\n    Reflect.set(this.formElement, 'disabled', this._disabled);\n  }\n\n  private _form: string | null = null;\n  // get form() { return this.formElem.getAttribute('form') || ''; }\n  // set form(val: string) { this.formElem.setAttribute('form', val); }\n\n  private _list: string | null = null;\n  // get list() { return this.formElem.getAttribute('list') || ''; }\n  // set list(val: string) { this.formElem.setAttribute('list', val)}\n\n  private _name: string = '';\n  get name() { return this._name; }\n  set name(val) { this.formElement.name = this._name = val; }\n\n  private _readOnly: boolean = false;\n  get readOnly() { return this._readOnly; }\n  set readOnly(val: any) { this.formElement.readOnly = this._readOnly = attr2bool(val); }\n\n  private _required: boolean = false;\n  get required() { return this._required; }\n  set required(val: any) { this.formElement.required = this._required = attr2bool(val); }\n\n  private _type: InputType = 'text';\n  get type() { return this._type as InputType; }\n  set type(val) { if (this.formElement instanceof HTMLInputElement) this.formElement.type = this._type = val; }\n\n  private _value: string = '';\n  get value() { return this._value; }\n  set value(val) {\n    this._value = val;\n    if (this.formElement.value !== this._value) this.formElement.value = this._value;\n  }\n\n  private _placeholder: string = '';\n  get placeholder() { return this._placeholder; }\n  set placeholder(val) { this.formElement.placeholder = this._placeholder = val; }\n\n  private _multiline: boolean | number = false;\n  get multiline() { return this._multiline; }\n  set multiline(val) { this._multiline = val; }\n\n  // PreciseUI\n  borderless: boolean = false;\n  className: string = '';\n  clearable: boolean = false;\n  defaultValue: string = '';\n  error: string = ''; // error message below input\n  icon: any; // Sets an optional default icon (if any) to use when no error or clearable is given. - we have slots\n  info: string = ''; // info instead of error\n  label: string = '';\n  maxLength: number = -1;\n  minLenght: number = -1;\n  prefix: string = '';\n  resizable: 'both' | 'horizontal' | 'vertical' | 'none' = 'none'; //! API change, was: boolean | 'auto' | 'vertical' | 'horizontal' = false\n  // style: string = ''; // not possible as string, has to be a CSSStyleDeclaration for this exact property name\n  // suffix: string = '';\n  // theme: string = ''; //TODO figure out how to use themes within wc\n  // Eventhandler\n  // onBlur: CallableFunction = noop;\n  // onChange: CallableFunction = noop;\n  // onClear: CallableFunction = noop;\n  // onFocus: CallableFunction = noop;\n  // onInput: CallableFunction = noop;\n\n\n\n//* Template *******************************************************************\n  protected renderStyle() {\n    return `\n.text-field-container {\n  position: relative;\n}\n.stack-pannel {\n  display: flex;\n  justify-content: flex-start;\n}\n#prefix,\n#suffix {\n  align-items: center;\n  background: rgb(239, 239, 239);\n  color: rgb(114, 114, 114);\n  display: flex;\n  font-size: 1rem;\n  padding: 1rem;\n}\nlabel {\n  display: flex;\n  flex-flow: column-reverse;\n  flex-grow: 1;\n  height: 100%;\n  margin: auto;\n  min-width: 0px;\n  position: relative;\n\n  align-items: center;\n  background: rgb(248, 248, 248);\n  border-bottom: 1px solid rgb(239, 239, 239);\n  box-shadow: none;\n  box-sizing: border-box;\n  cursor: auto;\n  display: flex;\n  flex: 1 1 0%;\n  margin: 0px;\n  max-height: 112px;\n  min-height: 54px;\n  overflow-y: auto;\n}\ninput {\n  -webkit-appearance: none;\n  background: none;\n  border-color: initial;\n  border-image: initial;\n  border-radius: 0px;\n  border-style: none;\n  border-width: initial;\n  box-shadow: none;\n  box-sizing: border-box;\n  color: rgb(62, 62, 62);\n  cursor: auto;\n  font-family: inherit;\n  font-size: 1rem;\n  height: 100%;\n  margin: 0px;\n  padding: 1.5rem 1rem 0.5rem;\n  transition: all 0.2s ease 0s;\n  width: 100%;\n}\ntextarea {\n  background: rgb(248, 248, 248);\n  border-bottom: 1px solid rgb(211, 211, 211);\n  border-image: initial;\n  border-left-color: initial;\n  border-left-width: initial;\n  border-radius: 0px;\n  border-right-color: initial;\n  border-right-width: initial;\n  border-style: none none solid;\n  border-top-color: initial;\n  border-top-width: initial;\n  box-shadow: none;\n  box-sizing: border-box;\n  color: rgb(114, 114, 114);\n  cursor: auto;\n  font-family: inherit;\n  font-size: 1rem;\n  margin: 0px;\n  padding: 1.5rem 1rem 0.5rem;\n  resize: ${this.resizable};\n  width: 100%;\n}\n#form-elem:disabled {\n  -webkit-appearance: none;\n  background: none;\n  border-color: initial;\n  border-image: initial;\n  border-radius: 0px;\n  border-style: none;\n  border-width: initial;\n  box-shadow: none;\n  box-sizing: border-box;\n  color: rgb(180, 180, 180);\n  cursor: not-allowed;\n  font-family: inherit;\n  font-size: 1rem;\n  height: 100%;\n  margin: 0px;\n  padding: 1rem;\n  transition: all 0.2s ease 0s;\n  width: 100%;\n}\n#description {\n  background: transparent;\n  box-sizing: border-box;\n  /* color: rgb(114, 114, 114); */\n  cursor: text;\n  display: block;\n  font-size: 0.75rem;\n  left: 1rem;\n  line-height: 1rem;\n  max-width: 66.66%;\n  overflow: hidden;\n  padding-top: 0.5rem;\n  position: absolute;\n  right: 0px;\n  text-overflow: ellipsis;\n  top: 0px;\n  transform-origin: left bottom;\n  /* transform: translate(0px, 0.85rem) scale(1.33); */\n  transition: all 0.2s ease 0s;\n  white-space: nowrap;\n}\n#form-elem:focus + #description {\n  color: rgb(0, 139, 208);\n  /* transform: none; */\n}`};\n\n  private renderIcon = () => this.icon ? this.icon : `Icon/ErrorIco`;\n  //@ts-ignore-next-line\n  private attr2string = () => (this.constructor as typeof TextField).observedAttributes.map((val) => val in this ? `${val}=\"${this[val]}\"` : '').join(' ');\n  private renderInput = () => `<input id=form-elem ${this.attr2string()} />`;\n  private renderTextarea = () => `<textarea id=form-elem ${this.attr2string()} ${typeof this._multiline === 'number' ? `row=${this._multiline}` : ''}></textarea>`;\n\n  renderTemplate() {\n    return `\n<div class=text-field-container>\n  <div class=stack-pannel>\n    <span id=prefix><slot name=prefix>Prefix</slot></span>\n    <label>\n      ${this._multiline ? this.renderTextarea() : this.renderInput()}\n      <span id=description><slot>Description/Label/Error/Info</slot></span>\n      <i class=defaultIcon><slot name=icon>${this.renderIcon()}</slot></i>\n    </label>\n    <span id=suffix><slot name=suffix>Suffix</slot></span>\n  </div>\n</div>`;\n  }\n\n\n\n//* Obervers/Handlers **********************************************************\n  static get observedAttributes() { return ['autocomplete', 'autofocus', 'disabled', 'form', 'list', 'multiline', 'name', 'placeholder', 'readOnly', 'required', 'type', 'value']; }\n\n  //@ts-ignore-next-line\n  attributeChangedCallback(attrName: string, oldValue: any, newValue: string) { if (attrName in this) this[attrName] = newValue }\n\n  //@ts-ignore-next-line\n  forwardProperty(targetElement: HTMLElement, key: string | number, val: any) { if (targetElement && key in targetElement) targetElement[key] = val; }\n\n\n\n//* Life Cycle Callbacks *******************************************************\n  preCommitHook() {\n    this.formElement.addEventListener('change', debounce(() => this.value = this.formElement.value, 50));\n  }\n}\n","import { customelementprefix } from '../../../package.json';\nimport { BaseElement, defineElement, property, attr2bool, bool2attr } from '../Base/base-element';\n\n@defineElement(`${customelementprefix}-card`)\nexport class Card extends BaseElement {\n  //! API change, was: orientation: 'horizontal' | 'vertical' = 'vertical';\n  @property({ reflect: true })\n  direction: 'row' | 'column' = 'column';\n\n  @property({ reflect: true })\n  layout: string = '';\n\n  get layoutCSS () {\n    return (this.layout.match(/\\d/gu) || [])\n      .map((val, key) => `.card > :nth-child(${key + 1}) {flex:${val} 1 auto;}`)\n      .join('\\n');\n  }\n\n\n\n  updateTemplate() {\n    return `<section class=\"card\">\n  <div class=\"card-header\"><slot name=header></slot></div>\n  <div class=\"card-media\"><slot name=media></slot></div>\n  <div class=\"card-body\"><slot name=body></slot></div>\n  <div class=\"card-footer\"><slot name=footer></slot></div>\n</section>`;\n  }\n\n  updateStyle() {\n    return `\n.card {\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: ${this.direction};\n  justify-content: flex-start;\n  padding: 1rem;\n}\n${this.layoutCSS}`;\n  }\n}\n","import { customelementprefix } from '../../../package.json';\nimport { BaseElement, defineElement, property } from '../Base/base-element';\n\n@defineElement(`${customelementprefix}-container`)\nexport class Container extends BaseElement {\n  @property({ reflect: true })\n  align: 'center' | 'left' | 'right' = 'center';\n\n  @property({ reflect: true })\n  maxWidth: number | null = null;\n\n  updateTemplate() {\n    return `<div class=container>\n  <slot></slot>\n</div>`;\n  }\n\n  updateStyle() {\n    return `.container {\n  display: flex;\n  justify-content: ${this.align === 'center' ? 'center' : `flex-${this.align === 'left' ? 'left' : 'right'}`};\n  ${this.maxWidth === null ? `max-width: ${this.maxWidth}` : ''}\n}`;\n  }\n}\n","import { customelementprefix } from '../../../package.json';\nimport { BaseElement, defineElement, property } from \"../Base/base-element\";\n\n@defineElement(`${customelementprefix}-content-switch`)\nexport class ContentSwitch extends BaseElement {\n  @property({\n    reflect: true\n    , attr2prop(val: string) { return Number(val); }\n    , prop2attr(val: number) { return String(val); }\n  })\n  defaultIndex: number = 1;\n\n  @property({\n    reflect: true\n    , attr2prop(val: string) { return Number(val); }\n    , prop2attr(val: number) { return String(val); }\n  })\n  selectedIndex: number = 1;\n\n  @property({ reflect: true })\n  orientation: 'vertical' | 'horizontal' = 'horizontal';\n\n  updateTemplate() {\n    return `<div class=content-switch>\n  <slot></slot>\n</div>`;\n  }\n\n  updateStyle() {\n    return ``;\n  }\n}\n"],"names":["identity","val","attr2bool","isDifferent","oldValue","newValue","Object","is","debounce","func","wait","immediate","TypeError","timeout","args","callNow","clearTimeout","setTimeout","apply","defaultPropertyDeclaration","observe","reflect","prop2attr","attr2prop","modified","defineElement","name","options","classDescriptor","finisher","classConstructor","customElements","define","property","propertyDeclaration","propertyDescriptor","kind","propertyKey","key","extras","placement","initializer","descriptor","configurable","enumerable","writable","get","set","oldVal","requestUpdate","addClassProperty","BaseElement","HTMLElement","constructor","attachShadow","mode","shadowRoot","_renderRoot","Error","observedAttributes","ret","classProperties","forEach","push","prototype","hasOwnProperty","call","defineProperty","value","Map","_classProperties","assign","template","_template","document","createElement","styleElement","_styleElement","updateTemplate","updateStyle","reflectAttributes","prop","removeAttribute","setAttribute","attributeChangedCallback","attrName","connectedCallback","isConnected","requestRender","innerHTML","dirtyTemplate","dirtyStyle","dirtyAttribute","preRenderHook","_rAFScheduled","requestAnimationFrame","render","appendChild","content","TextField","customelementprefix","_formElement","querySelector","_labelElem","_autocomplete","Reflect","formElement","_autofocus","_disabled","_name","_readOnly","readOnly","_required","required","_type","HTMLInputElement","type","_value","_placeholder","placeholder","_multiline","resizable","icon","map","join","attr2string","renderTextarea","renderInput","renderIcon","targetElement","addEventListener","Card","layout","match","direction","layoutCSS","Container","align","maxWidth","ContentSwitch"],"mappings":"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"}